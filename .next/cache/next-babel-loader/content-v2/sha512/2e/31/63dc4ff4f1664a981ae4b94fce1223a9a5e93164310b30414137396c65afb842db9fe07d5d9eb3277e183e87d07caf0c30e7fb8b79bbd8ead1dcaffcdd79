{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Learning\\\\ReactJS_Course\\\\Projects\\\\next-advanced\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.image,\n    title: props.title,\n    address: props.address,\n    description: props.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://yathendra:WJxCHKd4olvKLPyL@clusternextbasic.wrn8i.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupCollection = db.collection('meetups');\n  const meetups = await meetupCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  const client = await MongoClient.connect('mongodb+srv://yathendra:WJxCHKd4olvKLPyL@clusternextbasic.wrn8i.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupCollection = db.collection('meetups');\n  const selectedMeetup = await meetupCollection.findOne({\n    _id: meetupId\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: selectedMeetup\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Learning/ReactJS_Course/Projects/next-advanced/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","props","image","title","address","description","getStaticPaths","client","connect","db","meetupCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","console","log","selectedMeetup","findOne","meetupData"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,KADf;AAEE,IAAA,KAAK,EAAED,KAAK,CAACE,KAFf;AAGE,IAAA,OAAO,EAAEF,KAAK,CAACG,OAHjB;AAIE,IAAA,WAAW,EAAEH,KAAK,CAACI;AAJrB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,eAAeC,cAAf,GAAgC;AAErC,QAAMC,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CAAoB,iHAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,QAAMC,OAAO,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,CAAsB,EAAtB,EAA0B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA1B,EAAoCC,OAApC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AAAV,KAAb,CAAZ;AAFF,GAAP;AAID;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,QAAMf,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CAAoB,iHAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,QAAMiB,cAAc,GAAG,MAAMlB,gBAAgB,CAACmB,OAAjB,CAAyB;AAACf,IAAAA,GAAG,EAAEQ;AAAN,GAAzB,CAA7B;AACAf,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLf,IAAAA,KAAK,EAAE;AACL6B,MAAAA,UAAU,EAAEF;AADP;AADF,GAAP;AAKD;AAED,eAAe5B,aAAf","sourcesContent":["import { MongoClient } from 'mongodb';\r\n\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\n\r\nconst MeetupDetails = (props) => {\r\n  return (\r\n    <MeetupDetail\r\n      image={props.image}\r\n      title={props.title}\r\n      address={props.address}\r\n      description={props.description}\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  \r\n  const client = await MongoClient.connect('mongodb+srv://yathendra:WJxCHKd4olvKLPyL@clusternextbasic.wrn8i.mongodb.net/meetups?retryWrites=true&w=majority');\r\n  const db = client.db();\r\n  const meetupCollection = db.collection('meetups');\r\n  const meetups = await meetupCollection.find({}, {_id: 1}).toArray();\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({ params: { meetupId: meetup._id.toString()}})) \r\n  }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n  console.log(meetupId);\r\n  const client = await MongoClient.connect('mongodb+srv://yathendra:WJxCHKd4olvKLPyL@clusternextbasic.wrn8i.mongodb.net/meetups?retryWrites=true&w=majority');\r\n  const db = client.db();\r\n  const meetupCollection = db.collection('meetups');\r\n  const selectedMeetup = await meetupCollection.findOne({_id: meetupId});\r\n  client.close();\r\n  return {\r\n    props: {\r\n      meetupData: selectedMeetup\r\n    }\r\n  }\r\n}\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}